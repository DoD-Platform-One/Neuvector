# Default values for neuvector.
# This is a YAML-formatted file.
# Declare variables to be passed into the templates.

openshift: false

registry: registry.dso.mil
tag: 5.0.0-preview.1
oem:
imagePullSecrets:
psp: false
serviceAccount: default

controller:
  # If false, controller will not be installed
  enabled: true
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  image:
    repository: platform-one/big-bang/apps/sandbox/neuvector/controller.preview
    hash:
  replicas: 3
  disruptionbudget: 0
  schedulerName:
  priorityClassName:
  env: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - neuvector-controller-pod
          topologyKey: "kubernetes.io/hostname"
  tolerations: []
  nodeSelector: {}
    # key1: value1
    # key2: value2
  apisvc:
    type:
    annotations: {}
    # OpenShift Route configuration
    route:
      enabled: false
      termination: passthrough
      host:
  pvc:
    enabled: false
    accessModes:
      - ReadWriteMany
    storageClass:
    capacity:
  azureFileShare:
    enabled: false
    secretName:
    shareName:
  certificate:
    secret:
    keyFile: tls.key
    pemFile: tls.pem
  federation:
    mastersvc:
      type:
      # Federation Master Ingress
      ingress:
        enabled: false
        host:  # MUST be set, if ingress is enabled
        path: "/"  # or this could be "/api", but might need "rewrite-target" annotation
        annotations:
          ingress.kubernetes.io/protocol: https
          # ingress.kubernetes.io/rewrite-target: /
        tls: false
        secretName:
      # OpenShift Route configuration
      route:
        enabled: false
        termination: passthrough
        host:
    managedsvc:
      type:
      # Federation Managed Ingress
      ingress:
        enabled: false
        host:  # MUST be set, if ingress is enabled
        path: "/"  # or this could be "/api", but might need "rewrite-target" annotation
        annotations:
          ingress.kubernetes.io/protocol: https
          # ingress.kubernetes.io/rewrite-target: /
        tls: false
        secretName:
      # OpenShift Route configuration
      route:
        enabled: false
        termination: passthrough
        host:
  ingress:
    enabled: false
    host:  # MUST be set, if ingress is enabled
    path: "/"  # or this could be "/api", but might need "rewrite-target" annotation
    annotations:
      ingress.kubernetes.io/protocol: https
      # ingress.kubernetes.io/rewrite-target: /
    tls: false
    secretName:
  resources: {}
    # limits:
    #   cpu: 400m
    #   memory: 2792Mi
    # requests:
    #   cpu: 100m
    #   memory: 2280Mi
  configmap:
    enabled: false
    data:
      # eulainitcfg.yaml: |
      #  ...
      # ldapinitcfg.yaml: |
      #  ...
      # oidcinitcfg.yaml: |
      # ...
      # samlinitcfg.yaml: |
      # ...
      # sysinitcfg.yaml: |
      # ...
      # userinitcfg.yaml: |
      # ...
  secret:
    # NOTE: files defined here have preferrence over the ones defined in the configmap section
    enabled: false
    data: {}
      # eulainitcfg.yaml:
      #   license_key: 0Bca63Iy2FiXGqjk...
      #   ...
      # ldapinitcfg.yaml:
      #   directory: OpenLDAP
      #   ...
      # oidcinitcfg.yaml:
      #   Issuer: https://...
      #   ...
      # samlinitcfg.yaml:
      #   ...
      # sysinitcfg.yaml:
      #   ...
      # userinitcfg.yaml:
      #   ...

enforcer:
  # If false, enforcer will not be installed
  enabled: true
  image:
    repository: platform-one/big-bang/apps/sandbox/neuvector/enforcer.preview
    hash:
  priorityClassName:
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  resources: {}
    # limits:
    #   cpu: 400m
    #   memory: 2792Mi
    # requests:
    #   cpu: 100m
    #   memory: 2280Mi

manager:
  # If false, manager will not be installed
  enabled: true
  image:
    repository: platform-one/big-bang/apps/sandbox/neuvector/manager.preview
    hash:
  priorityClassName:
  env:
    ssl: true
  svc:
    type: ClusterIP
    loadBalancerIP:
    annotations: {}
      # azure
      # service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      # service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "apps-subnet"
  # OpenShift Route configuration
  route:
    enabled: true
    termination: passthrough
    host:
  certificate:
    secret:
    keyFile: tls.key
    pemFile: tls.pem
  ingress:
    enabled: false
    host:  # MUST be set, if ingress is enabled
    path: "/"
    annotations: {}
      # kubernetes.io/ingress.class: my-nginx
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.1.1.1"
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
      # only for end-to-end tls conf - ingress-nginx accepts backend self-signed cert
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    tls: false
    secretName:  # my-tls-secret
  resources: {}
    # limits:
    #   cpu: 400m
    #   memory: 2792Mi
    # requests:
    #   cpu: 100m
    #   memory: 2280Mi
  affinity: {}
  tolerations: []
  nodeSelector: {}
    # key1: value1
    # key2: value2

cve:
  updater:
    # If false, cve updater will not be installed
    enabled: true
    secure: false
    image:
      repository: platform-one/big-bang/apps/sandbox/neuvector/updater.preview
      tag: latest
      hash:
    schedule: "0 0 * * *"
    priorityClassName:
  scanner:
    enabled: true
    replicas: 3
    dockerPath: ""
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    image:
      repository: platform-one/big-bang/apps/sandbox/neuvector/scanner.preview
      tag: latest
      hash:
    priorityClassName:
    resources: {}
      # limits:
      #   cpu: 400m
      #   memory: 2792Mi
      # requests:
      #   cpu: 100m
      #   memory: 2280Mi
    affinity: {}
    tolerations: []
    nodeSelector: {}
      # key1: value1
      # key2: value2
docker:
  path: /var/run/docker.sock

resources: {}
  # limits:
  #   cpu: 400m
  #   memory: 2792Mi
  # requests:
  #   cpu: 100m
  #   memory: 2280Mi

k3s:
  enabled: false
  runtimePath: /run/k3s/containerd/containerd.sock

bottlerocket:
  enabled: false
  runtimePath: /run/dockershim.sock

containerd:
  enabled: false
  path: /var/run/containerd/containerd.sock

crio:
  enabled: false
  path: /var/run/crio/crio.sock

admissionwebhook:
  type: ClusterIP

crdwebhook:
  enabled: true
  type: ClusterIP

domain: bigbang.dev
istio:
  enabled: false
  neuvector:
    enabled: true
    annotations: {}
    labels: {}
    gateways:
      - istio-system/main
    hosts:
      - neuvector.{{ .Values.domain }}
  # -- Default neuvector peer authentication
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT
monitoring:
  enabled: false

networkPolicies:
  enabled: false
  ingressLabels: 
    app: istio-ingressgateway
    istio: ingressgateway
  controlPlaneCidr: 0.0.0.0/0
  egressHttps:
    enabled: true

# Bigbang helm test values default disabled
bbtests:
  enabled: false
  cypress:
    artifacts: true
    envs:
      cypress_url: "https://neuvector-service-webui.{{ .Release.Namespace }}.svc.cluster.local:8443"
  scripts:
    envs:
      URL: "https://neuvector-service-webui.{{ .Release.Namespace }}.svc.cluster.local:8443"

